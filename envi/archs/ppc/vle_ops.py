from .const import *
from envi import IF_NOFALL, IF_BRANCH, IF_CALL, IF_RET, IF_PRIV, IF_COND

#  ( "name"       , op        , mask                    , type   ,   op_type           , COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_REG, TYPE_REG))
# 0 1 1 1 1 1 rD rA rB OE 1 0                0 0 0 1                0 1 0 Rc
# 0 1 1 1 1 1 rD rA rB OE 0 0                0 1 0 1                0 0 0 Rc
ppc_ops = (
  ( "add"        , 0x7C000214, 0x7C000214 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "add."       , 0x7C000214, 0x7C000215 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "addo"       , 0x7C000214, 0x7C000614 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "addo."      , 0x7C000214, 0x7C000615 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "addc"       , 0x7C000014, 0x7C000014 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "addc."      , 0x7C000014, 0x7C000011 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "addco"      , 0x7C000014, 0x7C000414 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "addco."     , 0x7C000014, 0x7C000415 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "adde"       , 0x7C000114, 0x7C000114 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "adde."      , 0x7C000114, 0x7C000111 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "addeo"      , 0x7C000114, 0x7C000514 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "addeo."     , 0x7C000114, 0x7C000515 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "addme"      , 0x7C0001D4, 0x7C0001D4 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "addme."     , 0x7C0001D4, 0x7C0001D1 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "addmeo"     , 0x7C0001D4, 0x7C0005D4 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "addmeo."    , 0x7C0001D4, 0x7C0005D5 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "addze"      , 0x7C000194, 0x7C000194 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "addze."     , 0x7C000194, 0x7C000191 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "addzeo"     , 0x7C000194, 0x7C000594 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "addzeo."    , 0x7C000194, 0x7C000595 | F_MASK_XO  ,    F_XO,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_RC),

  ( "subf"       , 0x7C000050, 0x7C000050 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "subf."      , 0x7C000050, 0x7C000051 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "subfo"      , 0x7C000050, 0x7C000450 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "subfo."     , 0x7C000050, 0x7C000451 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "subfc"      , 0x7C000010, 0x7C000010 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "subfc."     , 0x7C000010, 0x7C000011 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "subfco"     , 0x7C000010, 0x7C000410 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "subfco."    , 0x7C000010, 0x7C000411 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),

    # 1e40:	7c e0 39 10 	subfe   r7,r0,r7 */
  ( "subfe"      , 0x7C000110, 0x7C000110 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "subfe."     , 0x7C000110, 0x7C000111 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "subfeo"     , 0x7C000510, 0x7C000510 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "subfeo."    , 0x7C000510, 0x7C000511 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  # ( "subfic."    , 0x7C000050, 0x7C000511 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE)), */
  ( "subfze"     , 0x7C000190, 0x7C000190 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "subfze."    , 0x7C000190, 0x7C000191 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "subfzeo"    , 0x7C000590, 0x7C000590 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "subfzeo."   , 0x7C000590, 0x7C000591 | F_MASK_XO  ,    F_XO,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_RC),


  # # 2718:	7c 00 01 46 	wrteei  0 */
  ( "wrtee"      , 0x7C000106, 0x7C000106 | F_MASK_X   ,    F_X,   INS_MOV, COND_AL, (TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  # This is a really awkward instruction to represent in this structure. the
  # parameter is just bit 16
  ( "wrteei"     , 0x7C000146, 0x7C000146 | F_MASK_X, F_X_WRTEEI,   INS_MOV, COND_AL, (TYPE_IMM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),


  ( "and"        , 0x7C000038, 0x7C000038 | F_MASK_X   ,   F_XRA,   INS_AND, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "and."       , 0x7C000038, 0x7C000039 | F_MASK_X   ,   F_XRA,   INS_AND, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "andc"       , 0x7C000078, 0x7C000078 | F_MASK_X   ,   F_XRA,   INS_AND, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "andc."      , 0x7C000078, 0x7C000079 | F_MASK_X   ,   F_XRA,   INS_AND, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "or"         , 0x7C000378, 0x7C000378 | F_MASK_X   ,   F_XRA,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "or."        , 0x7C000378, 0x7C000379 | F_MASK_X   ,   F_XRA,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),

  ( "orc"        , 0x7C000338, 0x7C000338 | F_MASK_X   ,   F_XRA,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "orc."       , 0x7C000338, 0x7C000339 | F_MASK_X   ,   F_XRA,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  
  ( "xor"        , 0x7C000278, 0x7C000278 | F_MASK_X   ,   F_XRA,   INS_XOR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "xor."       , 0x7C000278, 0x7C000279 | F_MASK_X   ,   F_XRA,   INS_XOR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "nor"        , 0x7C0000f8, 0x7C0000f8 | F_MASK_X   ,   F_XRA,   INS_NOR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "nor."       , 0x7C0000f8, 0x7C0000f9 | F_MASK_X   ,   F_XRA,   INS_NOR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "brinc"      , 0x1000020F, 0x1000020F | F_MASK_EVX ,   F_EVX,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "cmpw"       , 0x7C000000, 0x7C000000 | F_MASK_CMP ,   F_CMP,   INS_CMP, COND_AL, (TYPE_CR, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "cmplw"      , 0x7C000040, 0x7C000040 | F_MASK_CMP ,   F_CMP,   INS_CMP, COND_AL, (TYPE_CR, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  # The doubleword comparisons don't seem likely in VLE mode, but are still
  # technically possible
  ( "cmpd"       , 0x7C000000, 0x7C200000 | F_MASK_CMP ,   F_CMP,   INS_CMP, COND_AL, (TYPE_CR, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "cmpld"      , 0x7C000040, 0x7C200040 | F_MASK_CMP ,   F_CMP,   INS_CMP, COND_AL, (TYPE_CR, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "cntlzd"     , 0x7C000074, 0x7C000074 | F_MASK_X   ,   F_X_2,   INS_AND, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "cntlzd."    , 0x7C000074, 0x7C000075 | F_MASK_X   ,   F_X_2,   INS_AND, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "cntlzw"     , 0x7C000034, 0x7C000034 | F_MASK_X   ,   F_X_2,   INS_AND, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "cntlzw."    , 0x7C000034, 0x7C000035 | F_MASK_X   ,   F_X_2,   INS_AND, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "dcba"       , 0x7C0005EC, 0x7C0005EC | F_MASK_X   ,   F_X_2,    INS_IO, COND_AL, (TYPE_NONE, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbf"       , 0x7C0000AC, 0x7C0000AC | F_MASK_DCBF,  F_DCBF,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbfep"     , 0x7C0000FE, 0x7C0000FE | F_MASK_DCBF,  F_DCBF,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbi"       , 0x7C0003AC, 0x7C0003AC | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_NONE, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcblc"      , 0x7C00030C, 0x7C00030C | F_MASK_DCBL,  F_DCBL,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbst"      , 0x7C00006C, 0x7C00006C | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_NONE, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbt"       , 0x7C00022C, 0x7C00022C | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbtep"     , 0x7C00027E, 0x7C00027E | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbtls"     , 0x7C00014C, 0x7C00014C | F_MASK_DCBL,  F_DCBL,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbtst"     , 0x7C0001EC, 0x7C0001EC | F_MASK_DCBL,  F_DCBL,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbtstep"   , 0x7C0001FE, 0x7C0001FE | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbtstls"   , 0x7C00010C, 0x7C00010C | F_MASK_DCBL,  F_DCBL,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbz"       , 0x7C0007EC, 0x7C0007EC | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_NONE, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcbzep"     , 0x7C0007FE, 0x7C0007FE | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_NONE, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dci"        , 0x7C00038C, 0x7C00038C | F_MASK_DCI ,   F_DCI,    INS_IO, COND_AL, (TYPE_IMM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcread"     , 0x7C00028C, 0x7C00028C | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "dcread"     , 0x7C0003CC, 0x7C0003CC | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),

  ( "mulhw"      , 0x7C000096, 0x7C000096 | F_MASK_XO  ,    F_XO,   INS_MUL, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mulhw."     , 0x7C000096, 0x7C000097 | F_MASK_XO  ,    F_XO,   INS_MUL, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "mulhwu"     , 0x7C000016, 0x7C000016 | F_MASK_XO  ,    F_XO,   INS_MUL, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mulhwu."    , 0x7C000016, 0x7C000017 | F_MASK_XO  ,    F_XO,   INS_MUL, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),

  ( "mullw"      , 0x7C0001D6, 0x7C0001D6 | F_MASK_XO  ,    F_XO,   INS_MUL, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mullw."     , 0x7C0001D6, 0x7C0001D7 | F_MASK_XO  ,    F_XO,   INS_MUL, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "divw"       , 0x7C0003D6, 0x7C0003D6 | F_MASK_XO  ,    F_XO,   INS_DIV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "divw."      , 0x7C0003D6, 0x7C0003D7 | F_MASK_XO  ,    F_XO,   INS_DIV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "divwo"      , 0x7C0003D6, 0x7C0007D6 | F_MASK_XO  ,    F_XO,   INS_DIV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "divwo."     , 0x7C0003D6, 0x7C0007D7 | F_MASK_XO  ,    F_XO,   INS_DIV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "divwu"      , 0x7C000396, 0x7C000396 | F_MASK_XO  ,    F_XO,   INS_DIV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "divwu."     , 0x7C000396, 0x7C000397 | F_MASK_XO  ,    F_XO,   INS_DIV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "divwuo"     , 0x7C000396, 0x7C000796 | F_MASK_XO  ,    F_XO,   INS_DIV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "divwuo."    , 0x7C000396, 0x7C000797 | F_MASK_XO  ,    F_XO,   INS_DIV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "extsb"      , 0x7C000774, 0x7C000774 | F_MASK_EXT ,   F_X_2,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "extsb."     , 0x7C000774, 0x7C000775 | F_MASK_EXT ,   F_X_2,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "extsh"      , 0x7C000734, 0x7C000734 | F_MASK_EXT ,   F_X_2,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "extsh."     , 0x7C000734, 0x7C000735 | F_MASK_EXT ,   F_X_2,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "extsw"      , 0x7C0007B4, 0x7C0007B4 | F_MASK_EXT ,   F_X_2,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "extsw."     , 0x7C0007B4, 0x7C0007B5 | F_MASK_EXT ,   F_X_2,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "icbi"       , 0x7C0007AC, 0x7C0007AC | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_NONE, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "icbiep"     , 0x7C0007BE, 0x7C0007BE | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_NONE, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "icblc"      , 0x7C0001CC, 0x7C0001CC | F_MASK_DCBL,  F_DCBL,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "icbt"       , 0x7C00002C, 0x7C00002C | F_MASK_DCBL,  F_DCBL,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "icbtls"     , 0x7C0003CC, 0x7C0003CC | F_MASK_DCBL,  F_DCBL,    INS_IO, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "ici"        , 0x7C00078C, 0x7C00078C | F_MASK_DCI ,   F_DCI,    INS_IO, COND_AL, (TYPE_IMM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "icread"     , 0x7C0007CC, 0x7C0007CC | F_MASK_X   ,     F_X,    INS_IO, COND_AL, (TYPE_NONE, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  #apply only X instead of A for lt, gt, eq
  ( "isellt"     , 0x7C00001E, 0x7C00001E | F_MASK_A_ISEL,   F_A,    INS_OR, COND_LT, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_CR, TYPE_NONE), IFLAGS_NONE),
  ( "iselgt"     , 0x7C00005E, 0x7C00005E | F_MASK_A_ISEL,   F_A,    INS_OR, COND_GT, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_CR, TYPE_NONE), IFLAGS_NONE),
  ( "iseleq"     , 0x7C00009E, 0x7C00009E | F_MASK_A_ISEL,   F_A,    INS_OR, COND_EQ, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_CR, TYPE_NONE), IFLAGS_NONE),
  ( "lbepx"      , 0x7C0000BE, 0x7C0000BE | F_MASK_X   ,     F_X,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lhaux"      , 0x7C0002EE, 0x7C0002EE | F_MASK_X   ,   F_X_Z,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lhax"       , 0x7C0002AE, 0x7C0002AE | F_MASK_X   ,   F_X_Z,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lhbrx"      , 0x7C00062C, 0x7C00062C | F_MASK_X   ,   F_X_Z,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lhepx"      , 0x7C00023E, 0x7C00023E | F_MASK_X   ,   F_X_Z,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lhzux"      , 0x7C00026E, 0x7C00026E | F_MASK_X   ,     F_X,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lhzx"       , 0x7C00022E, 0x7C00022E | F_MASK_X   ,   F_X_Z,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lswi"       , 0x7C0004AA, 0x7C0004AA | F_MASK_X   ,     F_X,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lswx"       , 0x7C00042A, 0x7C00042A | F_MASK_X   ,     F_X,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lwarx"      , 0x7C000028, 0x7C000028 | F_MASK_X   ,   F_X_Z,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lwarx."     , 0x7C000029, 0x7C000029 | F_MASK_X   ,   F_X_Z,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "lwbrx"      , 0x7C00042C, 0x7C00042C | F_MASK_X   ,   F_X_Z,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lwepx"      , 0x7C00003E, 0x7C00003E | F_MASK_X   ,   F_X_Z,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lwzux"      , 0x7C00006E, 0x7C00006E | F_MASK_X   ,     F_X,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lwzx"       , 0x7C00002E, 0x7C00002E | F_MASK_X   ,   F_X_Z,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),

  ( "lbzx"       , 0x7C0000AE, 0x7C0000AE | F_MASK_X   ,   F_X_Z,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "lbzux"      , 0x7C0000EE, 0x7C0000EE | F_MASK_X   ,     F_X,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),

  ( "stbx"       , 0x7C0001AE, 0x7C0001AE | F_MASK_X   ,   F_X_Z, INS_STORE, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "stbux"      , 0x7C0001EE, 0x7C0001EE | F_MASK_X   ,     F_X, INS_STORE, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "sthx"       , 0x7C00032E, 0x7C00032E | F_MASK_X   ,   F_X_Z, INS_STORE, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "sthux"      , 0x7C00036E, 0x7C00036E | F_MASK_X   ,     F_X, INS_STORE, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "stwux"      , 0x7C00016E, 0x7C00016E | F_MASK_X   ,     F_X, INS_STORE, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "stwx"       , 0x7C00012E, 0x7C00012E | F_MASK_X   ,   F_X_Z, INS_STORE, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),

        # # 2584:	7c a7 e0 30 	slw     r7,r5,r28 */
  ( "slw"        , 0x7C000030, 0x7C000030 | F_MASK_X   ,   F_X_2,   INS_SHR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "slw."       , 0x7C000030, 0x7C000031 | F_MASK_X   ,   F_X_2,   INS_SHR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "srw"        , 0x7C000430, 0x7C000430 | F_MASK_X   ,   F_X_2,   INS_SHR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "srw."       , 0x7C000430, 0x7C000431 | F_MASK_X   ,   F_X_2,   INS_SHR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),

  ( "sraw"       , 0x7C000630, 0x7C000630 | F_MASK_X   ,   F_X_2,   INS_SHR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "sraw."      , 0x7C000630, 0x7C000631 | F_MASK_X   ,   F_X_2,   INS_SHR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "srawi"      , 0x7C000670, 0x7C000670 | F_MASK_X   ,   F_X_2,   INS_SHR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "srawi."     , 0x7C000670, 0x7C000671 | F_MASK_X   ,   F_X_2,   INS_SHR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IF_RC),

   # 1a1b6:	7c 6b 1e 70 	srawi   r11,r3,3 */

  ( "mbar"       , 0x7C0006AC, 0x7C0006AC | F_MASK_XFX ,   F_XFX,    INS_IO, COND_AL, (TYPE_IMM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mcrxr"      , 0x7C000400, 0x7C000400 | F_MASK_XER ,   F_XER,   INS_MOV, COND_AL, (TYPE_IMM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mfdcr"      , 0x7C000286, 0x7C000286 | F_MASK_MFPR,  F_MFPR,   INS_MOV, COND_AL, (TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mfdcrux"    , 0x7C000246, 0x7C000246 | F_MASK_EXT ,   F_EXT,   INS_MOV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mfdcrx"     , 0x7C000206, 0x7C000206 | F_MASK_EXT ,   F_EXT,   INS_MOV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mfmsr"      , 0x7C0000A6, 0x7C0000A6 | F_MASK_XFX ,   F_XFX,   INS_MOV, COND_AL, (TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mfspr"      , 0x7C0002A6, 0x7C0002A6 | F_MASK_MFPR,  F_MFPR,   INS_MOV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mtspr"      , 0x7C0003A6, 0x7C0003A6 | F_MASK_MTPR,  F_MTPR,   INS_MOV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mtmsr"      , 0x7C000124, 0x7C000124 | F_MASK_XFX ,   F_XFX,   INS_MOV, COND_AL, (TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "msync"      , 0x7C0004AC, 0x7C0004AC | F_MASK_XFX ,   F_NONE,   INS_MOV, COND_AL, (TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),


   # 32d30:	7c e6 00 d0 	neg     r7,r6 */

  ( "neg"        , 0x7C0000D0, 0x7C0000D0 | F_MASK_X   ,     F_X,   INS_NOT, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "neg."       , 0x7C0000D0, 0x7C0000D1 | F_MASK_X   ,     F_X,   INS_NOT, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "nego"       , 0x7C0000D0, 0x7C0004D0 | F_MASK_X   ,     F_X,   INS_NOT, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "nego."      , 0x7C0000D0, 0x7C0004D1 | F_MASK_X   ,     F_X,   INS_NOT, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_RC),

  ( "tlbre"      , 0x7C000764, 0x7C000764 | F_MASK_XFX ,  F_NONE,   INS_MOV, COND_AL, (TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "tlbwe"      , 0x7C0007A4, 0x7C0007A4 | F_MASK_XFX ,  F_NONE,   INS_MOV, COND_AL, (TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  # TODO: ERM, these won't actually go through the E_XL codepatH?
  # they'll actually get picked up as F_XO. thankfully, that seems to be correct still?
  ( "mfcr"       , 0x7C000026, 0x7C000026 | F_MASK_XO  ,   F_XO ,   INS_MOV, COND_AL, (TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "mtcrf"      , 0x7C000120, 0x7C000120 | F_MASK_XO, F_X_MTCRF,   INS_MOV, COND_AL, (TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE), #crf rossz
);

e_ops = (
#  ( "name"       , op        , mask                    , type   ,   op_type           , COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_REG, TYPE_REG))
  ( "e_add16i"   , 0x1C000000, 0x1F000000 | E_MASK_D   , E_D    ,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_SIMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_add2i."   , 0x70008800, 0x70008800 | E_MASK_I16A, E_I16A ,   INS_ADD, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "e_add2is"   , 0x70009000, 0x70009000 | E_MASK_I16A, E_I16A ,   INS_ADD, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_addi"     , 0x18008000, 0x18008000 | E_MASK_SCI8, E_SCI8 ,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IFLAGS_NONE),
  ( "e_addi."    , 0x18008800, 0x18008800 | E_MASK_SCI8, E_SCI8 ,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IF_RC),
  ( "e_addic"    , 0x18009000, 0x18009000 | E_MASK_SCI8, E_SCI8 ,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IFLAGS_NONE),
  ( "e_addic."   , 0x18009800, 0x18009800 | E_MASK_SCI8, E_SCI8 ,   INS_ADD, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IF_RC),
  ( "e_and2i."   , 0x7000C800, 0x7000C800 | E_MASK_I16L, E_I16L ,   INS_AND, COND_AL, (TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "e_and2is."  , 0x7000E800, 0x7000E800 | E_MASK_I16L, E_I16L ,   INS_AND, COND_AL, (TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_andi"     , 0x1800C000, 0x1800C000 | E_MASK_SCI8, E_SCI8I,   INS_AND, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IFLAGS_NONE),
  ( "e_andi."    , 0x1800C800, 0x1800C800 | E_MASK_SCI8, E_SCI8I,   INS_AND, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IF_RC),
  # CTR based branches can't be used with any crX values
  ( "e_bdnz"     , 0x7A200000, 0x7A200000 | E_MASK_BD15CTR, E_BD15, INS_CJMP, COND_EQ, (TYPE_NONE, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_BRANCH),
  ( "e_bdz"      , 0x7A300000, 0x7A300000 | E_MASK_BD15CTR, E_BD15, INS_CJMP, COND_NE, (TYPE_NONE, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_BRANCH),
  ( "e_bdnzl"    , 0x7A200001, 0x7A200001 | E_MASK_BD15CTR, E_BD15, INS_CCALL, COND_EQ, (TYPE_NONE, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_CALL),
  ( "e_bdzl"     , 0x7A300001, 0x7A300001 | E_MASK_BD15CTR, E_BD15, INS_CCALL, COND_NE, (TYPE_NONE, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_CALL),
  # has cr0-cr3  
  ( "e_bge"      , 0x7A000000, 0x7A000000 | E_MASK_BD15, E_BD15 ,  INS_CJMP, COND_GE, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_BRANCH),
  ( "e_ble"      , 0x7A010000, 0x7A010000 | E_MASK_BD15, E_BD15 ,  INS_CJMP, COND_LE, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_BRANCH),
  ( "e_bne"      , 0x7A020000, 0x7A020000 | E_MASK_BD15, E_BD15 ,  INS_CJMP, COND_NE, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_BRANCH),
  ( "e_bns"      , 0x7A030000, 0x7A030000 | E_MASK_BD15, E_BD15 ,  INS_CJMP, COND_VC, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_BRANCH),
  ( "e_blt"      , 0x7A100000, 0x7A100000 | E_MASK_BD15, E_BD15 ,  INS_CJMP, COND_LT, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_BRANCH),
  ( "e_bgt"      , 0x7A110000, 0x7A110000 | E_MASK_BD15, E_BD15 ,  INS_CJMP, COND_GT, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_BRANCH),
  ( "e_beq"      , 0x7A120000, 0x7A120000 | E_MASK_BD15, E_BD15 ,  INS_CJMP, COND_EQ, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_BRANCH),
  ( "e_bso"      , 0x7A130000, 0x7A130000 | E_MASK_BD15, E_BD15 ,  INS_CJMP, COND_VS, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_BRANCH),
  ( "e_bgel"     , 0x7A000001, 0x7A000001 | E_MASK_BD15, E_BD15 ,  INS_CCALL, COND_GE, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_CALL),
  ( "e_blel"     , 0x7A010001, 0x7A010001 | E_MASK_BD15, E_BD15 ,  INS_CCALL, COND_LE, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_CALL),
  ( "e_bnel"     , 0x7A020001, 0x7A020001 | E_MASK_BD15, E_BD15 ,  INS_CCALL, COND_NE, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_CALL),
  ( "e_bnsl"     , 0x7A030001, 0x7A030001 | E_MASK_BD15, E_BD15 ,  INS_CCALL, COND_VC, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_CALL),
  ( "e_bltl"     , 0x7A100001, 0x7A100001 | E_MASK_BD15, E_BD15 ,  INS_CCALL, COND_LT, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_CALL),
  ( "e_bgtl"     , 0x7A110001, 0x7A110001 | E_MASK_BD15, E_BD15 ,  INS_CCALL, COND_GT, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_CALL),
  ( "e_beql"     , 0x7A120001, 0x7A120001 | E_MASK_BD15, E_BD15 ,  INS_CCALL, COND_EQ, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_CALL),
  ( "e_bsol"     , 0x7A130001, 0x7A130001 | E_MASK_BD15, E_BD15 ,  INS_CCALL, COND_VS, (TYPE_CR, TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_COND | IF_CALL),
  # 78000313
  # The 24-bit BD24 field is concatenated on the right with 0b0, sign-extended, and then
  # added to the address of the branch instruction.
  ( "e_b"        , 0x78000000, 0x78000000 | E_MASK_BD24, E_BD24 ,   INS_JMP, COND_AL, (TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_BRANCH | IF_NOFALL),
  ( "e_bl"       , 0x78000001, 0x78000001 | E_MASK_BD24, E_BD24 ,  INS_CALL, COND_AL, (TYPE_JMP, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IF_CALL),
  ( "e_cmp16i"   , 0x70009800, 0x70009800 | E_MASK_IA16, E_IA16 ,   INS_CMP, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_cmph16i"  , 0x7000B000, 0x7000B000 | E_MASK_IA16, E_IA16 ,   INS_CMP, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_cmph"     , 0x7C00001C, 0x7C00001D | E_MASK_X   , E_XCR  ,   INS_CMP, COND_AL, (TYPE_CR, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_cmphl16i" , 0x7000B800, 0x7000B800 | E_MASK_IA16, E_IA16 ,   INS_CMP, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_cmphl"    , 0x7C00005C, 0x7C00005D | E_MASK_X   , E_XCR  ,   INS_CMP, COND_AL, (TYPE_CR, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_cmpli"    , 0x1880A800, 0x1880A800 | E_MASK_SCI8CR, E_SCI8CR, INS_CMP, COND_AL, (TYPE_CR, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IFLAGS_NONE),
  ( "e_cmpi"     , 0x1800A800, 0x1800A800 | E_MASK_SCI8CR, E_SCI8CR, INS_CMP, COND_AL, (TYPE_CR, TYPE_REG, TYPE_SIMM, TYPE_IMM, TYPE_IMM), IFLAGS_NONE),
  ( "e_cmpl16i"  , 0x7000A800, 0x7000A800 | E_MASK_IA16, E_IA16 ,   INS_CMP, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_crand"    , 0x7C000202, 0x7C000202 | E_MASK_XL  , E_XL   ,   INS_AND, COND_AL, (TYPE_CR, TYPE_CR, TYPE_CR, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_crandc"   , 0x7C000102, 0x7C000102 | E_MASK_XL  , E_XL   ,   INS_AND, COND_AL, (TYPE_CR, TYPE_CR, TYPE_CR, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_creqv"    , 0x7C000242, 0x7C000242 | E_MASK_XL  , E_XL   ,   INS_AND, COND_AL, (TYPE_CR, TYPE_CR, TYPE_CR, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_crnand"   , 0x7C0001C2, 0x7C0001C2 | E_MASK_XL  , E_XL   ,   INS_AND, COND_AL, (TYPE_CR, TYPE_CR, TYPE_CR, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_crnor"    , 0x7C000042, 0x7C000042 | E_MASK_XL  , E_XL   ,   INS_NOR, COND_AL, (TYPE_CR, TYPE_CR, TYPE_CR, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_cror"     , 0x7C000382, 0x7C000382 | E_MASK_XL  , E_XL   ,    INS_OR, COND_AL, (TYPE_CR, TYPE_CR, TYPE_CR, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_crorc"    , 0x7C000342, 0x7C000342 | E_MASK_XL  , E_XL   ,    INS_OR, COND_AL, (TYPE_CR, TYPE_CR, TYPE_CR, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_crxor"    , 0x7C000182, 0x7C000182 | E_MASK_XL  , E_XL   ,   INS_XOR, COND_AL, (TYPE_CR, TYPE_CR, TYPE_CR, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_lbz"      , 0x30000000, 0x30000000 | E_MASK_D   , E_D    ,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_lbzu"     , 0x18000000, 0x18000000 | E_MASK_D8  , E_D8   ,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_lha"      , 0x38000000, 0x38000000 | E_MASK_D   , E_D    ,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_lhau"     , 0x18000300, 0x18000300 | E_MASK_D8  , E_D8   ,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  # 5b0b0000
  ( "e_lhz"      , 0x58000000, 0x58000000 | E_MASK_D   , E_D    ,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_lhzu"     , 0x18000100, 0x18000100 | E_MASK_D8  , E_D8   ,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_li"       , 0x70000000, 0x70000000 | E_MASK_LI20, E_LI20 ,   INS_MOV, COND_AL, (TYPE_REG, TYPE_SIMM, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_lis"      , 0x7000E000, 0x7000E000 | E_MASK_I16L, E_I16L ,   INS_MOV, COND_AL, (TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_lmw"      , 0x18000800, 0x18000800 | E_MASK_D8  , E_D8   ,   INS_MUL, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_lwz"      , 0x50000000, 0x53000000 | E_MASK_D   , E_D    ,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_lwzu"     , 0x18000200, 0x18000200 | E_MASK_D8  , E_D8   ,  INS_LOAD, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_mcrf"     , 0x7C000020, 0x7C000020 | E_MASK_XL  , E_XLSP ,   INS_MOV, COND_AL, (TYPE_CR, TYPE_CR, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_mull2i"   , 0x7000A000, 0x7000A000 | E_MASK_I16A, E_I16A ,   INS_MUL, COND_AL, (TYPE_IMM, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_mulli"    , 0x1800A000, 0x1800A000 | E_MASK_SCI8, E_SCI8 ,   INS_MUL, COND_AL, (TYPE_REG, TYPE_REG, TYPE_SIMM, TYPE_IMM, TYPE_IMM), IFLAGS_NONE),
  ( "e_or2i"     , 0x7000C000, 0x7000C000 | E_MASK_I16L, E_I16L ,    INS_OR, COND_AL, (TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_or2is"    , 0x7000D000, 0x7000D000 | E_MASK_I16L, E_I16L ,    INS_OR, COND_AL, (TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_nop"      , 0x1800D000, 0x1800D000              , E_NONE ,   INS_NOP, COND_AL, (TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_mr"       , 0x1800D000, 0x1800D000 | E_MASK_SCI8_2, E_SCI8,  INS_MOV, COND_AL, (TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_ori"      , 0x1800D000, 0x1800D000 | E_MASK_SCI8, E_SCI8I,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IFLAGS_NONE),
  ( "e_ori."     , 0x1800D800, 0x1800D800 | E_MASK_SCI8, E_SCI8I,    INS_OR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IF_RC),
  ( "e_rlw"      , 0x7C000230, 0x7C000230 | E_MASK_X   , E_XRA  ,   INS_ROR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_rlw."     , 0x7C000231, 0x7C000231 | E_MASK_X   , E_XRA  ,   INS_ROR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_REG, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "e_rlwi"     , 0x7C000270, 0x7C000270 | E_MASK_X   , E_XRA  ,   INS_ROR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_rlwi."    , 0x7C000271, 0x7C000271 | E_MASK_X   , E_XRA  ,   INS_ROR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "e_rlwimi"   , 0x74000000, 0x74000000 | E_MASK_M   , E_M    ,   INS_ROR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IFLAGS_NONE),
  ( "e_rlwinm"   , 0x74000001, 0x74000001 | E_MASK_M   , E_M    ,   INS_ROR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IFLAGS_NONE),
  ( "e_slwi"     , 0x7C000070, 0x7C000070 | E_MASK_X   , E_XRA  ,   INS_SHL, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_slwi."    , 0x7C000071, 0x7C000071 | E_MASK_X   , E_XRA  ,   INS_SHL, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "e_srwi"     , 0x7C000470, 0x7C000470 | E_MASK_X   , E_XRA  ,   INS_SHR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_srwi."    , 0x7C000471, 0x7C000471 | E_MASK_X   , E_XRA  ,   INS_SHR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_NONE, TYPE_NONE), IF_RC),
  ( "e_stb"      , 0x34000000, 0x34000000 | E_MASK_D   , E_D    , INS_STORE, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_stbu"     , 0x18000400, 0x18000400 | E_MASK_D8  , E_D8   , INS_STORE, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_sth"      , 0x5C000000, 0x5C000000 | E_MASK_D   , E_D    , INS_STORE, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_sthu"     , 0x18000500, 0x18000500 | E_MASK_D8  , E_D8   , INS_STORE, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_stmw"     , 0x18000900, 0x18000900 | E_MASK_D8  , E_D8   , INS_STORE, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_stw"      , 0x54000000, 0x56000000 | E_MASK_D   , E_D    , INS_STORE, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_stwu"     , 0x18000600, 0x18000600 | E_MASK_D8  , E_D8   , INS_STORE, COND_AL, (TYPE_REG, TYPE_MEM, TYPE_REG, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),

# e_ldmvgprw 6  (0b0001_1000_000 RA 0b0001_0000 D8) = 0x18001000
# e_stmvgprw 6  (0b0001_1000_000 RA 0b0001_0001 D8) = 0x18001100
# e_ldmvsprw 6  (0b0001_1000_001 RA 0b0001_0000 D8) = 0x18201000
# e_stmvsprw 6  (0b0001_1000_001 RA 0b0001_0001 D8) = 0x18201100
# e_ldmvsrrw 6  (0b0001_1000_100 RA 0b0001_0000 D8) = 0x18801000
# e_stmvsrrw 6  (0b0001_1000_100 RA 0b0001_0001 D8) = 0x18801100
# e_ldmvcsrrw 6 (0b0001_1000_101 RA 0b0001_0000 D8) = 0x18A01000
# e_stmvcsrrw 6 (0b0001_1000_101 RA 0b0001_0001 D8) = 0x18A01100
# e_ldmvdsrrw 6 (0b0001_1000_110 RA 0b0001_0000 D8) = 0x18C01000
# e_stmvdsrrw 6 (0b0001_1000_110 RA 0b0001_0001 D8) = 0x18C01100
#                              new instruction mask = 0x18E01100
#                                      operand mask = 0x001F00FF

  ( "e_ldmvgprw" , 0x18001000, 0x18001000 | 0x001F00FF , E_D8VLS,  INS_LOAD, COND_AL, (TYPE_MEM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_stmvgprw" , 0x18001100, 0x18001100 | 0x001F00FF , E_D8VLS, INS_STORE, COND_AL, (TYPE_MEM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_ldmvsprw" , 0x18201000, 0x18201000 | 0x001F00FF , E_D8VLS,  INS_LOAD, COND_AL, (TYPE_MEM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_stmvsprw" , 0x18201100, 0x18201100 | 0x001F00FF , E_D8VLS, INS_STORE, COND_AL, (TYPE_MEM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_ldmvsrrw" , 0x18801000, 0x18801000 | 0x001F00FF , E_D8VLS,  INS_LOAD, COND_AL, (TYPE_MEM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_stmvsrrw" , 0x18801100, 0x18801100 | 0x001F00FF , E_D8VLS, INS_STORE, COND_AL, (TYPE_MEM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_ldmvcsrrw", 0x18A01000, 0x18A01000 | 0x001F00FF , E_D8VLS,  INS_LOAD, COND_AL, (TYPE_MEM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_stmvcsrrw", 0x18A01100, 0x18A01100 | 0x001F00FF , E_D8VLS, INS_STORE, COND_AL, (TYPE_MEM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_ldmvdsrrw", 0x18C01000, 0x18C01000 | 0x001F00FF , E_D8VLS,  INS_LOAD, COND_AL, (TYPE_MEM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),
  ( "e_stmvcsrrw", 0x18C01100, 0x18C01100 | 0x001F00FF , E_D8VLS, INS_STORE, COND_AL, (TYPE_MEM, TYPE_NONE, TYPE_NONE, TYPE_NONE, TYPE_NONE), IFLAGS_NONE),


  ( "e_subfic"   , 0x1800B000, 0x1800B000 | E_MASK_SCI8, E_SCI8 ,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IFLAGS_NONE),
  ( "e_subfic."  , 0x1800B800, 0x1800B800 | E_MASK_SCI8, E_SCI8 ,   INS_SUB, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IF_RC),
  ( "e_xori"     , 0x1800E000, 0x1800E000 | E_MASK_SCI8, E_SCI8I,   INS_XOR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IFLAGS_NONE),
  ( "e_xori."    , 0x1800E800, 0x1800E800 | E_MASK_SCI8, E_SCI8I,   INS_XOR, COND_AL, (TYPE_REG, TYPE_REG, TYPE_IMM, TYPE_IMM, TYPE_IMM), IF_RC),
)



se_ops = (
#  ( "name"      , op    , mask  , n,   op_type           , ((field ,shr,shl,  +, i, TYPE_REG_SE), ...)
  ( "se_illegal", 0x0000, 0x0000, 0,   INS_ILL, COND_NV, ((0), (0), (0), (0), (0)), IF_NOFALL),
  ( "se_isync"  , 0x0001, 0x0001, 0,  INS_SYNC, COND_AL, ((0), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_sc"     , 0x0002, 0x0002, 0,   INS_SWI, COND_AL, ((0), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_blr"    , 0x0004, 0x0004, 0,   INS_RET, COND_AL, ((0), (0), (0), (0), (0)), IF_RET | IF_NOFALL),
  ( "se_blrl"   , 0x0005, 0x0005, 0,   INS_RET, COND_AL, ((0), (0), (0), (0), (0)), IF_RET | IF_NOFALL),
  ( "se_bctr"   , 0x0006, 0x0006, 0,  INS_RJMP, COND_AL, ((0), (0), (0), (0), (0)), IF_BRANCH | IF_NOFALL),
  ( "se_bctrl"  , 0x0007, 0x0007, 0, INS_RCALL, COND_AL, ((0), (0), (0), (0), (0)), IF_CALL),
  ( "se_rfi"    , 0x0008, 0x0008, 0,  INS_TRAP, COND_AL, ((0), (0), (0), (0), (0)), IF_RET | IF_NOFALL | IF_PRIV),
  ( "se_rfci"   , 0x0009, 0x0009, 0,  INS_TRAP, COND_AL, ((0), (0), (0), (0), (0)), IF_RET | IF_NOFALL | IF_PRIV),
  ( "se_rfdi"   , 0x000A, 0x000A, 0,  INS_TRAP, COND_AL, ((0), (0), (0), (0), (0)), IF_RET | IF_NOFALL | IF_PRIV),
  ( "se_rfmci"  , 0x000B, 0x000B, 0,  INS_TRAP, COND_AL, ((0), (0), (0), (0), (0)), IF_RET | IF_NOFALL | IF_PRIV),
  ( "se_not"    , 0x0020, 0x002F, 1,   INS_NOT, COND_AL, ((0x000F,  0,  0,  0, 0, TYPE_REG_SE), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_neg"    , 0x0030, 0x003F, 1,   INS_NOT, COND_AL, ((0x000F,  0,  0,  0, 0, TYPE_REG_SE), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_mflr"   , 0x0080, 0x008F, 1,   INS_MOV, COND_AL, ((0x000F,  0,  0,  0, 0, TYPE_REG_SE), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_mtlr"   , 0x0090, 0x009F, 1,   INS_MOV, COND_AL, ((0x000F,  0,  0,  0, 0, TYPE_REG_SE), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_mfctr"  , 0x00A0, 0x00AF, 1,   INS_MOV, COND_AL, ((0x000F,  0,  0,  0, 0, TYPE_REG_SE), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_mtctr"  , 0x00B0, 0x00BF, 1,   INS_MOV, COND_AL, ((0x000F,  0,  0,  0, 0, TYPE_REG_SE), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_extzb"  , 0x00C0, 0x00CF, 1,    INS_OR, COND_AL, ((0x000F,  0,  0,  0, 0, TYPE_REG_SE), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_extsb"  , 0x00D0, 0x00DF, 1,    INS_OR, COND_AL, ((0x000F,  0,  0,  0, 0, TYPE_REG_SE), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_extzh"  , 0x00E0, 0x00EF, 1,    INS_OR, COND_AL, ((0x000F,  0,  0,  0, 0, TYPE_REG_SE), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_extsh"  , 0x00F0, 0x00FF, 1,    INS_OR, COND_AL, ((0x000F,  0,  0,  0, 0, TYPE_REG_SE), (0), (0), (0), (0)), IFLAGS_NONE),
  ( "se_mr"     , 0x0100, 0x01FF, 2,   INS_MOV, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_mtar"   , 0x0200, 0x02FF, 2,   INS_MOV, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  8,  0, TYPE_REG), (0), (0), (0)), IFLAGS_NONE),
  ( "se_mfar"   , 0x0300, 0x03FF, 2,   INS_MOV, COND_AL, ((0x00F0,  4,  0,  8, 1, TYPE_REG), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_add"    , 0x0400, 0x04FF, 2,   INS_ADD, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_mullw"  , 0x0500, 0x05FF, 2,   INS_MUL, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_sub"    , 0x0600, 0x06FF, 2,   INS_SUB, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_subf"   , 0x0700, 0x07FF, 2,   INS_SUB, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_cmp"    , 0x0C00, 0x0CFF, 2,   INS_CMP, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_cmpl"   , 0x0D00, 0x0DFF, 2,   INS_CMP, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_cmph"   , 0x0E00, 0x0EFF, 2,   INS_CMP, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_cmphl"  , 0x0F00, 0x0FFF, 2,   INS_CMP, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_addi"   , 0x2000, 0x21FF, 2,   INS_ADD, COND_AL, ((0x01F0,  4,  0,  1, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_and"    , 0x4600, 0x46FF, 2,   INS_AND, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_and."   , 0x4700, 0x47FF, 2,   INS_AND, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IF_RC),
  ( "se_andi"   , 0x2E00, 0x2FFF, 2,   INS_AND, COND_AL, ((0x01F0,  4,  0,  0, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_andc"   , 0x4500, 0x45FF, 2,   INS_AND, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_b"      , 0xE800, 0xE8FF, 1,   INS_JMP, COND_AL, ((0x00FF,  0,  1,  0, 0, TYPE_JMP), (0), (0), (0), (0)), IF_BRANCH | IF_NOFALL),
  ( "se_bl"     , 0xE900, 0xE9FF, 1,  INS_CALL, COND_AL, ((0x00FF,  0,  1,  0, 0, TYPE_JMP), (0), (0), (0), (0)), IF_CALL),
  # cr0
  # e2 e5
  ( "se_bge"    , 0xE000, 0xE0FF, 1,  INS_CJMP, COND_GE, ((0x00FF,  0,  1,  0, 0, TYPE_JMP), (0), (0), (0), (0)), IF_COND | IF_BRANCH),
  ( "se_ble"    , 0xE000, 0xE1FF, 1,  INS_CJMP, COND_LE, ((0x00FF,  0,  1,  0, 0, TYPE_JMP), (0), (0), (0), (0)), IF_COND | IF_BRANCH),
  ( "se_bne"    , 0xE000, 0xE2FF, 1,  INS_CJMP, COND_NE, ((0x00FF,  0,  1,  0, 0, TYPE_JMP), (0), (0), (0), (0)), IF_COND | IF_BRANCH),
  ( "se_bns"    , 0xE000, 0xE3FF, 1,  INS_CJMP, COND_VC, ((0x00FF,  0,  1,  0, 0, TYPE_JMP), (0), (0), (0), (0)), IF_COND | IF_BRANCH),
  ( "se_blt"    , 0xE000, 0xE4FF, 1,  INS_CJMP, COND_LT, ((0x00FF,  0,  1,  0, 0, TYPE_JMP), (0), (0), (0), (0)), IF_COND | IF_BRANCH),
  ( "se_bgt"    , 0xE000, 0xE5FF, 1,  INS_CJMP, COND_GT, ((0x00FF,  0,  1,  0, 0, TYPE_JMP), (0), (0), (0), (0)), IF_COND | IF_BRANCH),
  ( "se_beq"    , 0xE000, 0xE6FF, 1,  INS_CJMP, COND_EQ, ((0x00FF,  0,  1,  0, 0, TYPE_JMP), (0), (0), (0), (0)), IF_COND | IF_BRANCH),
  ( "se_bso"    , 0xE000, 0xE7FF, 1,  INS_CJMP, COND_VS, ((0x00FF,  0,  1,  0, 0, TYPE_JMP), (0), (0), (0), (0)), IF_COND | IF_BRANCH),
  ( "se_bc"     , 0xE000, 0xE7FF, 2,  INS_CJMP, COND_VS, ((0x0700,  8,  0, 32, 0, TYPE_JMP), (0x00FF,  0,  1,  0,  1, TYPE_IMM), (0), (0), (0)), IF_COND | IF_BRANCH),
  ( "se_bclri"  , 0x6000, 0x61FF, 2,    INS_OR, COND_AL, ((0x01F0,  4,  0,  0, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_bgeni"  , 0x6200, 0x63FF, 2,    INS_OR, COND_AL, ((0x01F0,  4,  0,  0, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_bmaski" , 0x2C00, 0x2DFF, 2,    INS_OR, COND_AL, ((0x01F0,  4,  0,  0, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_bseti"  , 0x6400, 0x65FF, 2,    INS_OR, COND_AL, ((0x01F0,  4,  0,  0, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_btsti"  , 0x6600, 0x67FF, 2,    INS_OR, COND_AL, ((0x01F0,  4,  0,  0, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_cmpi"   , 0x2A00, 0x2BFF, 2,   INS_CMP, COND_AL, ((0x01F0,  4,  0,  0, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_cmpli"  , 0x2200, 0x23FF, 2,   INS_CMP, COND_AL, ((0x01F0,  4,  0,  1, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_lbz"    , 0x8000, 0x8FFF, 3,  INS_LOAD, COND_AL, ((0x0F00,  8,  0,  0, 2, TYPE_IMM), (0x00F0,  4,  0,  0,  0, TYPE_REG_SE), (0x000F,  0,  0,  0,  1, TYPE_MEM), (0), (0)), IFLAGS_NONE),
  ( "se_lhz"    , 0xA000, 0xAFFF, 3,  INS_LOAD, COND_AL, ((0x0F00,  7,  0,  0, 2, TYPE_IMM), (0x00F0,  4,  0,  0,  0, TYPE_REG_SE), (0x000F,  0,  0,  0,  1, TYPE_MEM), (0), (0)), IFLAGS_NONE),
  ( "se_li"     , 0x4800, 0x4FFF, 2,   INS_MOV, COND_AL, ((0x07F0,  4,  0,  0, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_lwz"    , 0xC000, 0xCFFF, 3,  INS_LOAD, COND_AL, ((0x0F00,  6,  0,  0, 2, TYPE_IMM), (0x00F0,  4,  0,  0,  0, TYPE_REG_SE), (0x000F,  0,  0,  0,  1, TYPE_MEM), (0), (0)), IFLAGS_NONE),
  ( "se_or"     , 0x4400, 0x44FF, 2,    INS_OR, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_slw"    , 0x4200, 0x42FF, 2,   INS_SHL, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_slwi"   , 0x6C00, 0x6DFF, 2,   INS_SHL, COND_AL, ((0x01F0,  4,  0,  0, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_sraw"   , 0x4100, 0x41FF, 2,   INS_SHR, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_srawi"  , 0x6A00, 0x6BFF, 2,   INS_SHR, COND_AL, ((0x01F0,  4,  0,  0, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_srw"    , 0x4000, 0x40FF, 2,   INS_SHR, COND_AL, ((0x00F0,  4,  0,  0, 1, TYPE_REG_SE), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_srwi"   , 0x6800, 0x69FF, 2,   INS_SHR, COND_AL, ((0x01F0,  4,  0,  0, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_stb"    , 0x9000, 0x9FFF, 3, INS_STORE, COND_AL, ((0x0F00,  8,  0,  0, 2, TYPE_IMM), (0x00F0,  4,  0,  0,  0, TYPE_REG_SE), (0x000F,  0,  0,  0,  1, TYPE_MEM), (0), (0)), IFLAGS_NONE),
  ( "se_sth"    , 0xB000, 0xBFFF, 3, INS_STORE, COND_AL, ((0x0F00,  7,  0,  0, 2, TYPE_IMM), (0x00F0,  4,  0,  0,  0, TYPE_REG_SE), (0x000F,  0,  0,  0,  1, TYPE_MEM), (0), (0)), IFLAGS_NONE),
  ( "se_stw"    , 0xD000, 0xDFFF, 3, INS_STORE, COND_AL, ((0x0F00,  6,  0,  0, 2, TYPE_IMM), (0x00F0,  4,  0,  0,  0, TYPE_REG_SE), (0x000F,  0,  0,  0,  1, TYPE_MEM), (0), (0)), IFLAGS_NONE),
  ( "se_subi"   , 0x2400, 0x25FF, 2,   INS_SUB, COND_AL, ((0x01F0,  4,  0,  1, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
  ( "se_subi."  , 0x2600, 0x27FF, 2,   INS_SUB, COND_AL, ((0x01F0,  4,  0,  1, 1, TYPE_IMM), (0x000F,  0,  0,  0,  0, TYPE_REG_SE), (0), (0), (0)), IFLAGS_NONE),
)
